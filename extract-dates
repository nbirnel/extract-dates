#!/usr/bin/ruby

def parse_year(y) 
    if y !~ /^(19|20)[0-9][0-9]$/
        y.sub!(/^['`]/, "")
        if y.to_i < 69
            cent = "20"
        else
            cent = "19"
        end
        y.sub!(/^/, cent)
    end
    return y
end

def parse_day(d)
    d.sub!(/[a-zA-Z]*$/, "")
    d.sub!(/^0/, "")
    return d
end

def parse_month(m)
    m.captures.each_with_index do |cap, i|
        if cap.nil?
        else
            if m.names[i] =~ /^m_/
                month = m.names[i].to_s
                month.sub!(/^m_/, "")
                return month
            end
        end
    end
end

def printout(a)
    #puts "#{a[:date_str]}: #{a[:fmt]}: #{a[:year]}-#{a[:month]}-#{a[:day]}: #{a[:line]}"
    #puts "#{a[:date_str]}: #{a[:fmt]}: #{a[:year]}-#{sprintf "%02d", a[:month]}-#{sprintf "%02d", a[:day]}: #{a[:line]}"
    puts "#{a[:year]}-#{sprintf "%02d", a[:month]}-#{sprintf "%02d", a[:day]}: #{a[:line]}"
end

$hy = ',?[- .\\/]'

$y = '(?<year>(19|20|[\'`])?[0-9][0-9])'  #19 or 20 or ` or ',  plus 2 digits

$months = {
    1 =>  '(?<m_1>0?1|january|jan)',
    2 =>  '(?<m_2>0?2|february|feb)',
    3 =>  '(?<m_3>0?3|march|mar)',
    4 =>  '(?<m_4>0?4|april|apr)',
    5 =>  '(?<m_5>0?5|may|may)',
    6 =>  '(?<m_6>0?6|june|jun)',
    7 =>  '(?<m_7>0?7|july|jul)',
    8 =>  '(?<m_8>0?8|august|aug)',
    9 =>  '(?<m_9>0?9|september|sep|sept)',
    10 => '(?<m_10>10|october|oct)',
    11 => '(?<m_11>11|november|nov)',
    12 => '(?<m_12>12|december|dec)',
}

$m = "(?<month>#{$months[1]}|#{$months[2]}|#{$months[3]}|#{$months[4]}|#{$months[5]}|#{$months[6]}|#{$months[7]}|#{$months[8]}|#{$months[9]}|#{$months[10]}|#{$months[11]}|#{$months[12]})"

$d01 = '(?<d_1>0?1(st)?)'
$d02 = '(?<d_2>0?2(nd)?)'
$d03 = '(?<d_3>0?3(rd)?)'
$d04 = '(?<d_4>0?4(th)?)'
$d05 = '(?<d_5>0?5(th)?)'
$d06 = '(?<d_6>0?6(th)?)'
$d07 = '(?<d_7>0?7(th)?)'
$d08 = '(?<d_8>0?8(th)?)'
$d09 = '(?<d_9>0?9(th)?)'
$d10 = '(?<d_10>10(th)?)'
$d11 = '(?<d_11>11(th)?)'
$d12 = '(?<d_12>12(th)?)'
$d13 = '(?<d_13>13(th)?)'
$d14 = '(?<d_14>14(th)?)'
$d15 = '(?<d_15>15(th)?)'
$d16 = '(?<d_16>16(th)?)'
$d17 = '(?<d_17>17(th)?)'
$d18 = '(?<d_18>18(th)?)'
$d19 = '(?<d_19>19(th)?)'
$d20 = '(?<d_20>20(th)?)'
$d21 = '(?<d_21>21(st)?)'
$d22 = '(?<d_22>22(nd)?)'
$d23 = '(?<d_23>23(rd)?)'
$d24 = '(?<d_24>24(th)?)'
$d25 = '(?<d_25>25(th)?)'
$d26 = '(?<d_26>26(th)?)'
$d27 = '(?<d_27>27(th)?)'
$d28 = '(?<d_28>28(th)?)'
$d29 = '(?<d_29>29(th)?)'
$d30 = '(?<d_30>30(th)?)'
$d31 = '(?<d_31>31(st)?)'

$d = "(?<day>#{$d01}|#{$d02}|#{$d03}|#{$d04}|#{$d05}|#{$d06}|#{$d07}|#{$d08}|#{$d09}|#{$d10}|#{$d11}|#{$d12}|#{$d13}|#{$d14}|#{$d15}|#{$d16}|#{$d17}|#{$d18}|#{$d19}|#{$d20}|#{$d21}|#{$d22}|#{$d23}|#{$d24}|#{$d25}|#{$d26}|#{$d27}|#{$d28}|#{$d29}|#{$d30}|#{$d31})"

$datefmt = {
    mm_dd_yyyy: Regexp.new('\b' + $m + $hy + $d + $hy + $y + '\b', true),
    yyyy_mm_dd: Regexp.new('\b' + $y + $hy + $m + $hy + $d + '\b', true),
    dd_mm_yyyy: Regexp.new('\b' + $d + $hy + $m + $hy + $y + '\b', true),
}

while line = gets() do
    match_cnt = 0
    $datefmt.each do |fmt, re|
        if ( re =~ line )
            match = Regexp.last_match
            a = Hash.new
            #FIXME should just copy $~ object to a?
            a[:date_str] = $~
            a[:line] = $~.string
            a[:year] = $~[:year]
            a[:month] = $~[:month]
            a[:day] = $~[:day]
            a[:pre] = $~.pre_match
            a[:post] = $~.post_match

            match_cnt += 1
            a[:month] = parse_month(match)
            a[:year] = parse_year(a[:year])
            a[:day] = parse_day(a[:day])
            a[:match_cnt] = match_cnt
            printout(a)
        end
    end
end

